#include <dt-bindings/zmk/matrix_transform.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include "layouts.dtsi"

/ {
    chosen {
        zmk,physical-layout = &physical_layout0;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,11)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;

        diode-direction = "col2row";
        row-gpios
            = <&akdk_d 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ,<&akdk_d 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ,<&akdk_d 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ,<&akdk_d 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
        col-gpios
            = <&akdk_d 14 GPIO_ACTIVE_HIGH>
            ,<&akdk_d 13 GPIO_ACTIVE_HIGH>
            ,<&akdk_d 12 GPIO_ACTIVE_HIGH>
            ,<&akdk_d 11 GPIO_ACTIVE_HIGH>
            ,<&akdk_d 5 GPIO_ACTIVE_HIGH>
            ,<&akdk_d 4 GPIO_ACTIVE_HIGH>
            ;
    };

    split_inputs {
        #address-cells = <1>;
        #size-cells = <0>;
        trackpad_split: trackpad_split@0 {
            compatible = "zmk,input-split";
            reg = <0>;
            device = <&trackpad>;
            
            // --- ここからジェスチャー機能の追加 ---
            input-processors = <
                // ジェスチャー処理を最初に行います
                &zip_gestures 
                
                // 絶対座標を相対座標に変換
                &zip_absolute_to_relative
                
                // XY軸の入れ替えと反転（トラックパッドの向きに合わせて調整してください）
                // (INPUT_TRANSFORM_NONE) にすると無変換になります。
                &zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT) 
                
                // 標準のポインティング処理
                &zip_pointer
            >;
            // --- ここまでジェスチャー機能の追加 ---
        };
    };
};

&physical_layout0 {
    kscan = <&kscan0>;
    transform = <&default_transform>;
};

&pinctrl {
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 12)>,
                    <NRF_PSEL(TWIM_SCL, 1, 9)>;
            bias-pull-up;
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 12)>,
                    <NRF_PSEL(TWIM_SCL, 1, 9)>;
            bias-pull-up;
            low-power-enable;
        };
    };
};

&i2c0 {
    status = "okay";
    compatible = "nordic,nrf-twim";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
    clock-frequency = <I2C_BITRATE_FAST>;
    zephyr,concat-buf-size = <32>;

    trackpad: trackpad@56 {
        status = "okay";
        compatible = "azoteq,iqs7211e";
        reg = <0x56>;
        irq-gpios = <&gpio0 13 GPIO_PULL_UP>; 
        
        // IQS7211Eドライバーが絶対座標モードを有効にするための設定があれば、ここに追記します
        // (ドライバーのREADMEやdtsファイルで確認が必要です)
        // 例: absolute-mode; 
    };
};
