#include <dt-bindings/zmk/matrix_transform.h>
// #include <input/processors.dtsi>  <-- ★ この行は akdk_bt1.overlay に移動したので削除
#include <dt-bindings/zmk/input_transform.h>
#include "layouts.dtsi"

/ {
    chosen {
        zmk,physical-layout = &physical_layout0;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11)
        >;
    };

    i2c0_trackpad: i2c0_trackpad {
        compatible = "zmk,input-i2c";
        reg = <0>;
        // IQS7211E
        device = <&i2c0_iqs7211e>;
        status = "okay";
    };

    trackpad_split: trackpad_split {
        compatible = "zmk,input-split";
        reg = <0>;
        device = <&i2c0_trackpad>;
        
        // IQS7211E ドライバ (iqs7211e) の別名
        trackpad: trackpad@0 {
            compatible = "zmk,input-split";
            reg = <0>;
            device = <&i2c0_iqs7211e>;
            
            // --- ここからジェスチャー機能の追加 ---
            input-processors = <
                // ジェスチャー処理を最初に行います
                &zip_gestures 
                
                // 絶対座標を相対座標に変換
                &zip_absolute_to_relative
                
                // XY軸の入れ替えと反転（トラックパッドの向きに合わせて調整してください）
                // (INPUT_TRANSFORM_NONE) にすると無変換になります。
                &zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT) 
                
                // 標準のポインティング処理
                &zip_pointer
            >;
            // --- ここまでジェスチャー機能の追加 ---
        };
    };

};


&physical_layout0 {
    kscan = <&kscan0>;
    transform = <&default_transform>;
};

&pinctrl {
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 12)>,
                    <NRF_PSEL(TWIM_SCL, 1, 9)>;
            bias-pull-up;
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 12)>,
                    <NRF_PSEL(TWIM_SCL, 1, 9)>;
            bias-pull-up;
            low-power-enable;
        };
    };
};

&i2c0 {
    status = "okay";
    compatible = "nordic,nrf-twim";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;

    // IQS7211Eのノード定義
    i2c0_iqs7211e: iqs7211e@74 {
        compatible = "sekigon,iqs7211e";
        reg = <0x74>;
        label = "IQS7211E";
        irq-gpios = <&gpio0 13 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
        status = "okay";
    };
};
