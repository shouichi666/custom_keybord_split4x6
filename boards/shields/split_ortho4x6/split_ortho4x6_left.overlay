#include <dt-bindings/zmk/matrix_transform.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <dt-bindings/zmk/keys.h> 
#include "layouts.dtsi"

/ {
    chosen {
        zmk,physical-layout = &physical_layout0;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
        map = <
            RC_x(0,0) RC_x(0,1) RC_x(0,2) RC_x(0,3) RC_x(0,4) RC_x(0,5) RC_x(0,6) RC_x(0,7) RC_x(0,8) RC_x(0,9) RC_x(0,10) RC_x(0,11)
            RC_x(1,0) RC_x(1,1) RC_x(1,2) RC_x(1,3) RC_x(1,4) RC_x(1,6) RC_x(1,7) RC_x(1,8) RC_x(1,9) RC_x(1,10) RC_x(1,11)
            RC_x(2,0) RC_x(2,1) RC_x(2,2) RC_x(2,3) RC_x(2,4) RC_x(2,7) RC_x(2,8) RC_x(2,9) RC_x(2,10) RC_x(2,11)
            RC_x(3,0) RC_x(3,1) RC_x(3,2) RC_x(3,3) RC_x(3,4) RC_x(3,5) RC_x(3,6) RC_x(3,7) RC_x(3,11)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;

        diode-direction = "col2row";
        row-gpios
            = <&akdk_d 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ,<&akdk_d 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ,<&akdk_d 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ,<&akdk_d 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
        col-gpios
            = <&akdk_d 14 GPIO_ACTIVE_HIGH>
            ,<&akdk_d 13 GPIO_ACTIVE_HIGH>
            ,<&akdk_d 12 GPIO_ACTIVE_HIGH>
            ,<&akdk_d 11 GPIO_ACTIVE_HIGH>
            ,<&akdk_d 5 GPIO_ACTIVE_HIGH>
            ,<&akdk_d 4 GPIO_ACTIVE_HIGH>
            ;
    };

    split_inputs {
        #address-cells = <1>;
        #size-cells = <0>;
        trackpad_split: trackpad_split@0 {
            compatible = "zmk,input-split";
            reg = <0>;
            device = <&trackpad>;
        };
    };
    
    // IQS7211Eトラックパッドの操作感をカスタマイズする入力プロセッサを定義
    trackpad_processor: trackpad_processor {
        compatible = "zmk,input-processor";
        status = "okay";

        // ポインターの移動速度を標準より速く (1.5倍)
        pointer-speed = <1.5>;

        // スクロールの速度を調整 (1.2倍)
        scroll-speed = <1.2>;

        // macOSやスマートフォンのような「自然な」スクロールを有効化
        natural-scroll; 
        
        // --- ジェスチャーのカスタム割り当て ---
        
        // 2本指ジェスチャーの定義
        gestures {
            // 2本指クリックはデフォルトで右クリック
            two-finger-click = <&two_finger_click_right>;
        };

        // 3本指ジェスチャーの定義 (レイヤー操作に限定 - ビルド安全性を最優先)
        three-finger-gestures {
            // 3本指上スワイプをレイヤー1へ一時的に切り替え (Mo 1)
            three-finger-swipe-up = <&mo 1>; 
            // 3本指下スワイプをレイヤー2へ一時的に切り替え (Mo 2)
            three-finger-swipe-down = <&mo 2>;
        };

        // 4本指ジェスチャーの定義 (レイヤー操作に限定 - ビルド安全性を最優先)
        four-finger-gestures {
            // 4本指左スワイプをレイヤー3へ永続的に切り替え (To 3)
            four-finger-swipe-left = <&to 3>; 
            // 4本指右スワイプをベースレイヤー(0)へ永続的に切り替え (To 0)
            four-finger-swipe-right = <&to 0>;
        };
    };
};

&physical_layout0 {
    kscan = <&kscan0>;
    transform = <&default_transform>;
};

// split_inputノードに定義したカスタムプロセッサを適用
&trackpad_split {
    processor = <&trackpad_processor>;
};

&pinctrl {
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 12)>,
                    <NRF_PSEL(TWIM_SCL, 1, 9)>;
            bias-pull-up;
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 12)>,
                    <NRF_PSEL(TWIM_SCL, 1, 9)>;
            bias-pull-up;
            low-power-enable;
        };
    };
};

&i2c0 {
    status = "okay";
    compatible = "nordic,nrf-twim";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
    clock-frequency = <I2C_BITRATE_FAST>;
    zephyr,concat-buf-size = <32>;

    trackpad: trackpad@56 {
        status = "okay";
        compatible = "azoteq,iqs7211e";
        reg = <0x56>;
        irq-gpios = <&gpio0 13 GPIO_PULL_UP>; 
    };
};
